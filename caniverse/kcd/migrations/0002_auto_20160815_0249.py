# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-15 02:49
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import kcd.validators


class Migration(migrations.Migration):

    dependencies = [
        ('kcd', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='bus',
            options={'verbose_name_plural': 'Buses'},
        ),
        migrations.AlterField(
            model_name='bus',
            name='baudrate',
            field=models.IntegerField(default=500000, help_text='Nominal data transfer rate in baud (e.g. 500000, 125000, 100000 or 83333).', validators=[kcd.validators.RangeValidator(5000, 1000000, code='baud_rate', message='Baud rate must be between %(lower)s and %(upper)s. (it is %(value)s).')]),
        ),
        migrations.AlterField(
            model_name='bus',
            name='name',
            field=models.TextField(help_text='Human-readable name of the bus network (e.g. "Comfort").'),
        ),
        migrations.AlterField(
            model_name='label',
            name='value',
            field=models.IntegerField(help_text='Signal raw value that is described here.', validators=[django.core.validators.MinValueValidator(0, message='Must be non-negative, was %(value)s')]),
        ),
        migrations.AlterField(
            model_name='labelgroup',
            name='raw_from',
            field=models.PositiveIntegerField(help_text='Signal raw value the label group is starting with.'),
        ),
        migrations.AlterField(
            model_name='labelgroup',
            name='raw_to',
            field=models.PositiveIntegerField(help_text='Signal raw value the label group is ending with.'),
        ),
        migrations.AlterField(
            model_name='message',
            name='count',
            field=models.PositiveIntegerField(default=0, help_text='Number of repetitions of a triggered network message. 0 (default) for infinitee repetitions.'),
        ),
        migrations.AlterField(
            model_name='message',
            name='format',
            field=models.CharField(choices=[('standard', 'standard'), ('extenteded', 'exteneded')], default='standard', help_text='Frame format of the network message.', max_length=8, validators=[django.core.validators.RegexValidator(regex='(standard)|(extended)')]),
        ),
        migrations.AlterField(
            model_name='message',
            name='interval',
            field=models.PositiveIntegerField(default=0, help_text='Repetition interval of a cyclic network message in milliseconds.', validators=[kcd.validators.RangeValidator(0, 60000, code='interval')]),
        ),
        migrations.AlterField(
            model_name='message',
            name='length',
            field=models.CharField(help_text='Number of bytes available in the data field of the message (data length code). "auto" (default) calculate minimum length for the contained signals in the message.', max_length=4, validators=[django.core.validators.RegexValidator(regex='r([0-8])|(auto)')]),
        ),
        migrations.AlterField(
            model_name='message',
            name='message_id',
            field=models.TextField(help_text='The unique identifier of the message. May have 11-bit (Standard frame format) or 29-bit (Extended frame format). The identifier is usually written in hexadecimal format e.g. 0x123. If format is "extended" this identifier includes both Base ID (11 bits) and Extended ID (18 bits).', validators=[django.core.validators.RegexValidator(regex='0x[A-F0-9]+')]),
        ),
        migrations.AlterField(
            model_name='message',
            name='name',
            field=models.TextField(help_text='Human-readable name of the network message (e.g."OBD-Info").'),
        ),
        migrations.AlterField(
            model_name='message',
            name='remote',
            field=models.BooleanField(default=False, help_text='True, if message is a remote frame.'),
        ),
        migrations.AlterField(
            model_name='message',
            name='triggered',
            field=models.BooleanField(default=False, help_text='Sending behavior of the network message. True, if message is triggered by signal changes.'),
        ),
        migrations.AlterField(
            model_name='multiplex',
            name='consumer',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kcd.Consumer'),
        ),
        migrations.AlterField(
            model_name='multiplex',
            name='label_set',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kcd.LabelSet'),
        ),
        migrations.AlterField(
            model_name='multiplex',
            name='notes',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kcd.Notes'),
        ),
        migrations.AlterField(
            model_name='multiplex',
            name='value',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kcd.Value'),
        ),
        migrations.AlterField(
            model_name='muxgroup',
            name='count',
            field=models.PositiveIntegerField(help_text='Count value of the Multiplex when the signals of this group become valid.', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='noderef',
            name='consumer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kcd.Consumer'),
        ),
        migrations.AlterField(
            model_name='noderef',
            name='node_deref',
            field=models.OneToOneField(help_text='Dereferencing a network node by its unique identifier.', on_delete=django.db.models.deletion.CASCADE, to='kcd.Node'),
        ),
        migrations.AlterField(
            model_name='noderef',
            name='producer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kcd.Producer'),
        ),
        migrations.AlterField(
            model_name='notes',
            name='note',
            field=models.TextField(help_text='"Describes the purpose of the signal/variable and/or comments on its usage.'),
        ),
        migrations.RemoveField(
            model_name='signal',
            name='consumers',
        ),
        migrations.AddField(
            model_name='signal',
            name='consumers',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kcd.Consumer'),
        ),
        migrations.RemoveField(
            model_name='signal',
            name='label_set',
        ),
        migrations.AddField(
            model_name='signal',
            name='label_set',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kcd.LabelSet'),
        ),
        migrations.RemoveField(
            model_name='signal',
            name='notes',
        ),
        migrations.AddField(
            model_name='signal',
            name='notes',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kcd.Notes'),
        ),
        migrations.RemoveField(
            model_name='signal',
            name='values',
        ),
        migrations.AddField(
            model_name='signal',
            name='values',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kcd.Value'),
        ),
        migrations.AlterField(
            model_name='value',
            name='type',
            field=models.CharField(choices=[('unsigned', 'unsigned'), ('signed', 'signed'), ('single', 'IEEE754 Single'), ('double', 'IEEE754 Double')], default='unsigned', help_text='Datatype of the value e.g. "unsigned","signed" or IEE754 "single", "double".', max_length=8, null=True, validators=[django.core.validators.RegexValidator('(unsigned)|(signed)|(single)|(double)')]),
        ),
        migrations.AlterField(
            model_name='var',
            name='name',
            field=models.TextField(help_text='Unique name of the variable.'),
        ),
        migrations.AlterField(
            model_name='var',
            name='notes',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kcd.Notes'),
        ),
        migrations.AlterField(
            model_name='var',
            name='value',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kcd.Value'),
        ),
    ]
