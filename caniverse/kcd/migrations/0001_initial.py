# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-24 07:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import kcd.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BasicSignalType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endianess', models.CharField(choices=[('little', 'little'), ('big', 'big')], help_text='Determines if Byteorder is big-endian (Motorola), little-endian (Intel) otherwise.', max_length=6)),
                ('length', models.IntegerField(default=1, help_text='Bit length of the signal.', validators=[kcd.validators.validate_bit_length])),
                ('name', models.TextField(help_text='Human readable name of the signal.')),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(help_text='Describes the scope of application e.g. the target vehicle or controlled device.')),
                ('version', models.TextField(help_text='The version of the network definition document.')),
                ('author', models.TextField(help_text='The owner or author of the network definition document.')),
                ('company', models.TextField(help_text='The owner company of the network definition document.')),
                ('date', models.TextField(help_text='The release date of this version of the network definition document.')),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='LabelGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='LabelSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Multiplex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MuxGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='NetworkDefinition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='NodeRef',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node_id', models.TextField(help_text='Referencing a network node by its unique identifier.')),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Signal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('unsigned', 'unsigned'), ('signed', 'signed'), ('single', 'IEEE754 Single'), ('double', 'IEEE754 Double')], default='unsigned', help_text='Datatype of the value', max_length=8, null=True)),
                ('slope', models.FloatField(default=1, help_text='The slope "m" of a linear equation y = mx + b.')),
                ('intercept', models.FloatField(default=0, help_text='The y-axis intercept "b" of a linear equation y = mx + b.')),
                ('unit', models.TextField(help_text='Physical unit of the value written as unit term as described in "The Unified Code for Units of Measure" (http://unitsofmeasure.org/ucum.html)')),
                ('min', models.FloatField(default=0, help_text='Lower validity limit of the interpreted value after using the slope/intercept equation.')),
                ('max', models.FloatField(default=1, help_text='Upper validity limit of the interpreted value after using the slope/intercept equation.')),
            ],
        ),
        migrations.CreateModel(
            name='Var',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='document',
            name='network_definition',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='document', to='kcd.NetworkDefinition'),
        ),
    ]
